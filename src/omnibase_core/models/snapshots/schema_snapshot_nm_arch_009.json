{
  "metadata": {
    "timestamp": "2025-06-27T12:51:34.252092",
    "source_file": "src/omnibase/model/model_tool_collection.py",
    "ticket": "nm_arch_009_model_tool_collection_split",
    "total_models": 2,
    "purpose": "Pre-split validation baseline",
    "actual_models": [
      "ModelToolCollection",
      "ModelMetadataToolCollection"
    ],
    "file_lines": 132
  },
  "schemas": {
    "ModelToolCollection": {
      "schema_hash": "fb4873c03d2190b16c8a0c1b786f08c4bcf7eda3d883b5a478dc957135c2b35a",
      "field_count": 1,
      "required_fields": 0,
      "schema": {
        "description": "Standards-compliant collection of executable tools for ONEX registries.\n\nContains actual tool implementations that conform to ProtocolTool interface.\nUsed for registry-driven dependency injection and scenario-based testing.\n\nThis is the canonical type for registry tool collections, not a dict[str, Any].",
        "properties": {
          "tools": {
            "additionalProperties": true,
            "description": "Mapping of tool names to ProtocolTool implementations",
            "title": "Tools",
            "type": "object"
          }
        },
        "title": "ModelToolCollection",
        "type": "object"
      }
    },
    "ModelMetadataToolCollection": {
      "schema_hash": "54c6f44f4098d3ab0e7278dea84d436e4bb07151399120424e54143aba83cdd3",
      "field_count": 0,
      "required_fields": 0,
      "schema": {
        "additionalProperties": true,
        "description": "Collection of metadata/documentation tools for ONEX metadata blocks.\n\nThis is the legacy ToolCollection renamed for clarity. Used for metadata\ndocumentation and function discovery, not for actual executable tools.\n\nCanonical type for the 'tools' field in NodeMetadataBlock and ProjectMetadataBlock.",
        "title": "ModelMetadataToolCollection",
        "type": "object"
      }
    }
  }
}
