# Request Response Subcontract - Standard Request/Response Interaction Patterns
# Provides standardized request/response interaction patterns for all node types

contract_type: "request_response_subcontract"
contract_version:
  major: 1
  minor: 0
  patch: 0

metadata:
  name: "RequestResponseSubcontract"
  description: "Standard request/response interaction patterns and communication protocols for ONEX nodes"
  author: "ONEX Framework Team"
  created: "2025-09-01"
  purpose: "Define comprehensive request/response patterns with validation, formatting, and error handling"
  applicable_node_types: ["COMPUTE", "EFFECT", "REDUCER", "ORCHESTRATOR"]

business_logic:
  pattern: "request_response_processing"
  ai_agent:
    capabilities: ["request_processing", "response_formatting", "error_handling", "request_tracking"]
    coordination_patterns: ["synchronous_processing", "validation_pipeline", "error_recovery"]
    performance_targets:
      default_timeout: "30s"
      max_request_size: "10MB"
      max_response_size: "50MB"

# === REQUEST RESPONSE ACTIONS ===
actions:
  process_request:
    description: "Process an incoming request and generate response"
    operation_type: "request_processing"
    inputs:
      request_data:
        type: "object"
        description: "The request data to process"
        required: true
      request_context:
        type: "ModelRequestContext"
        description: "Context information for the request"
        required: true
      processing_options:
        type: "object"
        description: "Options for request processing"
        default: {}
    outputs:
      response_data:
        type: "object"
        description: "The processed response data"
      processing_metadata:
        type: "ModelProcessingMetadata"
        description: "Metadata about request processing"
    required: true
    timeout_ms: 10000

  validate_request:
    description: "Validate incoming request structure and data"
    operation_type: "request_validation"
    inputs:
      request_data:
        type: "object"
        description: "Request data to validate"
        required: true
      validation_schema:
        type: "object"
        description: "Schema for request validation"
        required: true
    outputs:
      validation_result:
        type: "ModelValidationResult"
        description: "Result of request validation"
      validation_errors:
        type: "array"
        description: "List of validation errors if any"
        items: "string"
        default: []
    required: true
    timeout_ms: 2000

  format_response:
    description: "Format response according to specified format and schema"
    operation_type: "response_formatting"
    inputs:
      response_data:
        type: "object"
        description: "Response data to format"
        required: true
      format_config:
        type: "object"
        description: "Configuration for response formatting"
        required: true
      schema_version:
        type: "string"
        description: "Version of the response schema"
        default: "1.0"
    outputs:
      formatted_response:
        type: "ModelFormattedResponse"
        description: "Formatted response data"
      format_metadata:
        type: "object"
        description: "Metadata about response formatting"
    required: true
    timeout_ms: 1000

  handle_error:
    description: "Handle processing errors and generate error responses"
    operation_type: "error_handling"
    inputs:
      error_details:
        type: "ModelErrorDetails"
        description: "Details about the error that occurred"
        required: true
      request_context:
        type: "ModelRequestContext"
        description: "Context of the request that caused the error"
        required: true
      error_handling_config:
        type: "object"
        description: "Configuration for error handling"
        default: {}
    outputs:
      error_response:
        type: "ModelErrorResponse"
        description: "Structured error response"
      error_metadata:
        type: "object"
        description: "Metadata about error handling"
    required: true
    timeout_ms: 2000

  track_request:
    description: "Track request lifecycle and generate correlation data"
    operation_type: "request_tracking"
    inputs:
      request_id:
        type: "string"
        description: "Unique identifier for the request"
        required: true
      tracking_config:
        type: "object"
        description: "Configuration for request tracking"
        default: {}
    outputs:
      tracking_data:
        type: "ModelTrackingData"
        description: "Request tracking information"
      correlation_info:
        type: "object"
        description: "Correlation data for request tracing"
    required: false
    timeout_ms: 500

# === REQUEST RESPONSE CONFIGURATION ===
request_response_config:
  default_timeout_ms: 30000
  max_request_size_mb: 10
  max_response_size_mb: 50
  compression_enabled: true
  encryption_required: false
  correlation_tracking: true
  request_logging_enabled: true
  response_caching:
    enabled: false
    ttl_ms: 300000 # 5 minutes
    max_cache_size_mb: 100

# === REQUEST PATTERNS BY NODE TYPE ===
node_request_patterns:
  COMPUTE:
    request_types: ["computation_request", "algorithm_execution"]
    response_types: ["computation_result", "algorithm_output"]
    typical_processing_time_ms: 2000
    supports_streaming: false
    supports_batching: true

  EFFECT:
    request_types: ["effect_execution", "io_operation", "external_call"]
    response_types: ["effect_result", "io_result", "external_response"]
    typical_processing_time_ms: 5000
    supports_streaming: true
    supports_batching: false

  REDUCER:
    request_types: ["aggregation_request", "state_query", "reduction_operation"]
    response_types: ["aggregation_result", "state_snapshot", "reduction_output"]
    typical_processing_time_ms: 3000
    supports_streaming: true
    supports_batching: true

  ORCHESTRATOR:
    request_types: ["workflow_request", "coordination_command", "task_assignment"]
    response_types: ["workflow_status", "coordination_result", "task_acknowledgment"]
    typical_processing_time_ms: 1000
    supports_streaming: true
    supports_batching: true

# === OUTPUT MODELS ===
output_models:
  ModelRequestContext:
    description: "Context information for a request"
    fields:
      request_id:
        type: "string"
        description: "Unique identifier for the request"
        required: true
      correlation_id:
        type: "string"
        description: "Correlation identifier for request tracing"
        required: true
      timestamp:
        type: "datetime"
        description: "When the request was created"
        required: true
      source_node:
        type: "string"
        description: "Node that originated the request"
        required: true
      target_node:
        type: "string"
        description: "Node that should process the request"
        required: true
      request_type:
        type: "string"
        description: "Type of the request"
        required: true
      headers:
        type: "object"
        description: "Request headers"
        additionalProperties: "string"
        default: {}
      priority:
        type: "enum[LOW,NORMAL,HIGH,CRITICAL]"
        description: "Priority level of the request"
        default: "NORMAL"

  ModelProcessingMetadata:
    description: "Metadata about request processing"
    fields:
      processing_node:
        type: "string"
        description: "Node that processed the request"
        required: true
      processing_time_ms:
        type: "integer"
        description: "Time taken to process the request"
        validation: "ge=0"
        required: true
      processing_stage:
        type: "string"
        description: "Stage of processing completed"
        required: true
      cpu_time_ms:
        type: "integer"
        description: "CPU time used for processing"
        validation: "ge=0"
        default: 0
      memory_used_mb:
        type: "float"
        description: "Memory used for processing in MB"
        validation: "ge=0.0"
        default: 0.0
      input_valid:
        type: "boolean"
        description: "Whether input validation passed"
        required: true
      output_valid:
        type: "boolean"
        description: "Whether output validation passed"
        required: true

  ModelValidationResult:
    description: "Result of request validation"
    fields:
      validation_success:
        type: "boolean"
        description: "Whether validation was successful"
        required: true
      validation_errors:
        type: "array"
        description: "List of validation errors if any"
        items: "string"
        default: []
      field_errors:
        type: "object"
        description: "Field-specific validation errors"
        additionalProperties: "string"
        default: {}
      schema_version:
        type: "string"
        description: "Version of the validation schema used"
        required: true

  ModelFormattedResponse:
    description: "Formatted response data"
    fields:
      response_id:
        type: "string"
        description: "Unique identifier for the response"
        required: true
      request_id:
        type: "string"
        description: "ID of the original request"
        required: true
      correlation_id:
        type: "string"
        description: "Correlation identifier"
        required: true
      timestamp:
        type: "datetime"
        description: "When the response was generated"
        required: true
      processing_time_ms:
        type: "integer"
        description: "Time taken to process the request"
        validation: "ge=0"
        required: true
      status:
        type: "enum[SUCCESS,ERROR,TIMEOUT,INVALID]"
        description: "Status of the response"
        required: true
      headers:
        type: "object"
        description: "Response headers"
        additionalProperties: "string"
        default: {}
      payload:
        type: "object"
        description: "Response payload data"
        required: true

  ModelErrorDetails:
    description: "Details about an error that occurred"
    fields:
      error_code:
        type: "string"
        description: "Unique error code"
        required: true
      error_message:
        type: "string"
        description: "Human-readable error message"
        required: true
      error_type:
        type: "enum[VALIDATION,PROCESSING,TIMEOUT,RESOURCE,SYSTEM]"
        description: "Category of the error"
        required: true
      stack_trace:
        type: "string"
        description: "Stack trace if available"
        required: false
      context:
        type: "object"
        description: "Additional error context"
        default: {}
      occurred_at:
        type: "datetime"
        description: "When the error occurred"
        required: true

  ModelErrorResponse:
    description: "Structured error response"
    fields:
      error_code:
        type: "string"
        description: "Unique error code"
        required: true
      error_message:
        type: "string"
        description: "Human-readable error message"
        required: true
      error_type:
        type: "enum[VALIDATION,PROCESSING,TIMEOUT,RESOURCE,SYSTEM]"
        description: "Category of the error"
        required: true
      suggestions:
        type: "array"
        description: "Suggested remediation actions"
        items: "string"
        default: []
      recovery_actions:
        type: "array"
        description: "Automated recovery actions available"
        items: "string"
        default: []
      retry_after_ms:
        type: "integer"
        description: "Suggested retry delay in milliseconds"
        validation: "ge=0"
        required: false

  ModelTrackingData:
    description: "Request tracking information"
    fields:
      request_id:
        type: "string"
        description: "ID of the tracked request"
        required: true
      lifecycle_stage:
        type: "string"
        description: "Current lifecycle stage"
        required: true
      created_at:
        type: "datetime"
        description: "When tracking was initiated"
        required: true
      last_updated:
        type: "datetime"
        description: "When tracking was last updated"
        required: true
      processing_nodes:
        type: "array"
        description: "Nodes that have processed this request"
        items: "string"
        default: []
      total_processing_time_ms:
        type: "integer"
        description: "Total processing time across all nodes"
        validation: "ge=0"
        default: 0

# === VALIDATION SCHEMAS ===
validation_schemas:
  request_validation:
    required_fields: ["request_id", "request_type", "payload"]
    field_types:
      request_id: "string"
      correlation_id: "string"
      request_type: "string"
      payload: "object"
    field_constraints:
      request_id: "^[a-zA-Z0-9-]{36}$" # UUID format
      request_type: "^[a-z][a-z_]*[a-z]$" # snake_case

  response_validation:
    required_fields: ["response_id", "request_id", "status", "payload"]
    field_types:
      response_id: "string"
      request_id: "string"
      status: "string"
      payload: "object"

# === ERROR HANDLING PATTERNS ===
error_handling:
  retry_policies:
    transient_errors:
      max_retries: 3
      retry_delay_ms: 1000
      exponential_backoff: true
      backoff_multiplier: 2.0
    timeout_errors:
      max_retries: 1
      retry_delay_ms: 500
    validation_errors:
      max_retries: 0 # Don't retry validation errors

  circuit_breaker:
    enabled: true
    failure_threshold: 5
    timeout_ms: 60000 # 1 minute
    recovery_timeout_ms: 30000 # 30 seconds

# === DEPENDENCIES PROVIDED ===
dependencies:
  - name: "request_processing"
    type: "capability"
    description: "Provides request processing and response generation capabilities"
  - name: "request_validation"
    type: "capability"
    description: "Provides request/response validation capabilities"
  - name: "error_handling"
    type: "capability"
    description: "Provides error handling and recovery capabilities"
  - name: "request_tracking"
    type: "capability"
    description: "Provides request lifecycle tracking capabilities"

# === DEPENDENCIES REQUIRED ===
requires_dependencies:
  - name: "protocol_message_formatter"
    type: "protocol"
    description: "Message formatting protocol for request/response serialization"
    optional: true
  - name: "protocol_validator"
    type: "protocol"
    description: "Validation protocol for request/response validation"
    optional: true

# === METRICS ===
metrics:
  - name: "requests_processed"
    type: "counter"
    description: "Total number of requests processed"
    labels: ["request_type", "status", "node_type"]
  - name: "request_processing_time"
    type: "histogram"
    description: "Time taken to process requests"
    labels: ["request_type", "node_type"]
    buckets: [10, 50, 100, 500, 1000, 5000, 10000, 30000]
  - name: "active_requests"
    type: "gauge"
    description: "Number of currently active requests"
    labels: ["node_type"]
  - name: "request_size"
    type: "histogram"
    description: "Size of incoming requests in bytes"
    labels: ["request_type"]
    buckets: [1024, 10240, 102400, 1048576, 10485760]
  - name: "response_size"
    type: "histogram"
    description: "Size of outgoing responses in bytes"
    labels: ["request_type"]
    buckets: [1024, 10240, 102400, 1048576, 52428800]
  - name: "validation_errors"
    type: "counter"
    description: "Number of request validation errors"
    labels: ["error_type", "field_name", "request_type"]
  - name: "processing_errors"
    type: "counter"
    description: "Number of request processing errors"
    labels: ["error_type", "request_type", "recovery_attempted"]
  - name: "request_retries"
    type: "counter"
    description: "Number of request retry attempts"
    labels: ["request_type", "retry_reason"]

# === INTEGRATION ===
integration:
  main_contract_field: "request_response_configuration"
  mapping_strategy: "direct_embedding"
  backward_compatibility: true
