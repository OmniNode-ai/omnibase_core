# Introspection Subcontract - Node Discovery and Capability Reporting
# Provides standardized node discovery and capability reporting for all node types

contract_type: "introspection_subcontract"
contract_version:
  major: 1
  minor: 0
  patch: 0

metadata:
  name: "IntrospectionSubcontract"
  description: "Node discovery, capability reporting, and runtime introspection for ONEX nodes"
  author: "ONEX Framework Team"
  created: "2025-09-01"
  purpose: "Define comprehensive introspection patterns for node discovery and capability reporting"
  applicable_node_types: ["COMPUTE", "EFFECT", "REDUCER", "ORCHESTRATOR"]

business_logic:
  pattern: "node_introspection"
  ai_agent:
    capabilities: ["node_discovery", "capability_reporting", "runtime_statistics", "peer_discovery"]
    coordination_patterns: ["service_discovery", "capability_exchange", "network_topology_mapping"]
    performance_targets:
      discovery_interval: "60s"
      capability_refresh: "5min"
      discovery_timeout: "5s"

# === INTROSPECTION ACTIONS ===
actions:
  get_node_info:
    description: "Get basic node information including type, version, and status"
    operation_type: "node_information"
    inputs:
      info_filter:
        type: "object"
        description: "Filter for node information to include"
        properties:
          include_version: "boolean"
          include_status: "boolean"
          include_uptime: "boolean"
    outputs:
      node_info:
        type: "ModelNodeInfo"
        description: "Basic node information and metadata"
      capability_summary:
        type: "ModelCapabilitySummary"
        description: "Summary of node capabilities"
    required: true
    timeout_ms: 2000

  get_capabilities:
    description: "Get detailed node capabilities and available actions"
    operation_type: "capability_discovery"
    inputs:
      include_internal:
        type: "boolean"
        description: "Include internal/debug capabilities"
        default: false
      capability_filter:
        type: "object"
        description: "Filter for capability types to include"
    outputs:
      capabilities:
        type: "ModelCapabilities"
        description: "Detailed node capabilities and actions"
      action_definitions:
        type: "array"
        description: "Available action definitions"
        items: "ModelActionDefinition"
      dependency_info:
        type: "ModelDependencyInfo"
        description: "Node dependency information"
    required: true
    timeout_ms: 3000

  get_runtime_stats:
    description: "Get runtime statistics and performance metrics"
    operation_type: "runtime_monitoring"
    inputs:
      include_history:
        type: "boolean"
        description: "Include historical statistics"
        default: false
      stats_window_ms:
        type: "integer"
        description: "Time window for statistics aggregation"
        default: 300000
    outputs:
      runtime_stats:
        type: "ModelRuntimeStats"
        description: "Runtime statistics and metrics"
      performance_metrics:
        type: "object"
        description: "Performance metrics and trends"
    required: false
    timeout_ms: 2000

  discover_peers:
    description: "Discover other nodes in the network"
    operation_type: "peer_discovery"
    inputs:
      node_type_filter:
        type: "array"
        description: "Filter by node types"
        items: "string"
        default: []
      discovery_scope:
        type: "string"
        description: "Scope of discovery (local, group, global)"
        default: "group"
      timeout_ms:
        type: "integer"
        description: "Discovery timeout in milliseconds"
        default: 5000
    outputs:
      peer_nodes:
        type: "array"
        description: "Discovered peer nodes"
        items: "ModelPeerNode"
      network_topology:
        type: "ModelNetworkTopology"
        description: "Network topology information"
    required: false
    timeout_ms: 5000

# === INTROSPECTION CONFIGURATION ===
introspection_config:
  auto_registration: true
  discovery_interval_ms: 60000 # 1 minute
  capability_refresh_ms: 300000 # 5 minutes
  include_performance_data: true
  include_dependency_health: true
  peer_discovery_enabled: true

# === OUTPUT MODELS ===
output_models:
  ModelNodeInfo:
    description: "Basic node information and metadata"
    fields:
      node_id:
        type: "string"
        description: "Unique identifier for the node"
        required: true
      node_type:
        type: "enum[COMPUTE,EFFECT,REDUCER,ORCHESTRATOR]"
        description: "Type of the node"
        required: true
      node_name:
        type: "string"
        description: "Human-readable name of the node"
        required: true
      version:
        type: "object"
        description: "Node version information"
        required: true
      status:
        type: "enum[HEALTHY,DEGRADED,UNHEALTHY,CRITICAL]"
        description: "Current node status"
        required: true
      uptime_ms:
        type: "integer"
        description: "Node uptime in milliseconds"
        validation: "ge=0"
        required: true
      last_updated:
        type: "datetime"
        description: "When the node information was last updated"
        required: true

  ModelCapabilitySummary:
    description: "Summary of node capabilities"
    fields:
      total_capabilities:
        type: "integer"
        description: "Total number of capabilities"
        validation: "ge=0"
        required: true
      required_actions:
        type: "integer"
        description: "Number of required actions"
        validation: "ge=0"
        required: true
      optional_actions:
        type: "integer"
        description: "Number of optional actions"
        validation: "ge=0"
        required: true
      capability_types:
        type: "array"
        description: "Types of capabilities available"
        items: "string"
        default: []

  ModelCapabilities:
    description: "Detailed node capabilities and actions"
    fields:
      actions:
        type: "array"
        description: "Available actions"
        items: "ModelActionDefinition"
        default: []
      dependencies:
        type: "array"
        description: "Node dependencies"
        items: "string"
        default: []
      protocols:
        type: "array"
        description: "Supported protocols"
        items: "string"
        default: []

  ModelActionDefinition:
    description: "Definition of an available action"
    fields:
      action_name:
        type: "string"
        description: "Name of the action"
        required: true
      description:
        type: "string"
        description: "Description of the action"
        required: true
      required:
        type: "boolean"
        description: "Whether the action is required"
        required: true
      timeout_ms:
        type: "integer"
        description: "Timeout for the action in milliseconds"
        validation: "ge=0"
        required: true
      input_schema:
        type: "object"
        description: "Input schema for the action"
        default: {}
      output_schema:
        type: "object"
        description: "Output schema for the action"
        default: {}

  ModelDependencyInfo:
    description: "Node dependency information"
    fields:
      required_dependencies:
        type: "array"
        description: "Required dependencies"
        items: "string"
        default: []
      optional_dependencies:
        type: "array"
        description: "Optional dependencies"
        items: "string"
        default: []
      provided_capabilities:
        type: "array"
        description: "Capabilities provided by this node"
        items: "string"
        default: []

  ModelRuntimeStats:
    description: "Runtime statistics and metrics"
    fields:
      requests_processed:
        type: "integer"
        description: "Total number of requests processed"
        validation: "ge=0"
        required: true
      average_response_time_ms:
        type: "float"
        description: "Average response time in milliseconds"
        validation: "ge=0.0"
        required: true
      error_count:
        type: "integer"
        description: "Total number of errors"
        validation: "ge=0"
        required: true
      memory_usage_mb:
        type: "float"
        description: "Memory usage in megabytes"
        validation: "ge=0.0"
        required: true
      cpu_usage_percent:
        type: "float"
        description: "CPU usage percentage"
        validation: "ge=0.0,le=100.0"
        required: true
      start_time:
        type: "datetime"
        description: "Node start time"
        required: true

  ModelPeerNode:
    description: "Information about a discovered peer node"
    fields:
      node_id:
        type: "string"
        description: "Unique identifier of the peer node"
        required: true
      node_type:
        type: "string"
        description: "Type of the peer node"
        required: true
      endpoint:
        type: "string"
        description: "Network endpoint of the peer node"
        required: true
      status:
        type: "string"
        description: "Status of the peer node"
        required: true
      last_seen:
        type: "datetime"
        description: "When the peer was last seen"
        required: true
      capabilities:
        type: "array"
        description: "Capabilities of the peer node"
        items: "string"
        default: []

  ModelNetworkTopology:
    description: "Network topology information"
    fields:
      total_nodes:
        type: "integer"
        description: "Total number of nodes in the network"
        validation: "ge=0"
        required: true
      node_types:
        type: "object"
        description: "Count of nodes by type"
        additionalProperties: "integer"
        default: {}
      topology_type:
        type: "string"
        description: "Type of network topology"
        required: true
      last_scan:
        type: "datetime"
        description: "When the topology was last scanned"
        required: true

# === DEPENDENCIES PROVIDED ===
dependencies:
  - name: "node_discovery"
    type: "capability"
    description: "Provides node discovery and registration capabilities"
  - name: "capability_reporting"
    type: "capability"
    description: "Provides capability introspection and reporting"
  - name: "runtime_monitoring"
    type: "capability"
    description: "Provides runtime statistics monitoring"

# === DEPENDENCIES REQUIRED ===
requires_dependencies:
  - name: "protocol_service_discovery"
    type: "protocol"
    description: "Service discovery protocol for peer detection"
    optional: true
  - name: "protocol_node_registry"
    type: "protocol"
    description: "Node registry protocol for registration"
    optional: true

# === METRICS ===
metrics:
  - name: "introspection_requests"
    type: "counter"
    description: "Total number of introspection requests"
    labels: ["request_type", "success"]
  - name: "discovery_operations"
    type: "counter"
    description: "Number of peer discovery operations"
    labels: ["scope", "success"]
  - name: "capability_queries"
    type: "counter"
    description: "Number of capability queries processed"
    labels: ["query_type", "include_internal"]
  - name: "peer_count"
    type: "gauge"
    description: "Current number of discovered peer nodes"
    labels: ["node_type", "status"]
  - name: "introspection_response_time"
    type: "histogram"
    description: "Response time for introspection requests"
    labels: ["operation"]
    buckets: [10, 50, 100, 500, 1000, 2000, 5000]

# === INTEGRATION ===
integration:
  main_contract_field: "introspection_configuration"
  mapping_strategy: "direct_embedding"
  backward_compatibility: true
