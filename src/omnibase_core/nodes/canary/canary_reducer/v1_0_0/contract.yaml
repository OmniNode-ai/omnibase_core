# Canary Reducer - ONEX Contract
# Reducer node for canary deployment state aggregation and HTTP service hosting

# === REQUIRED ROOT FIELDS ===
contract_version: {major: 1, minor: 0, patch: 0}
node_name: "canary_reducer"
node_version: {major: 1, minor: 0, patch: 0}
contract_name: "canary_reducer_contract"
description: "Canary Reducer Node - State aggregation and HTTP services for canary deployments"
node_type: "REDUCER"
name: "canary_reducer"
version: {major: 1, minor: 0, patch: 0}
input_model: "ModelCanaryReducerInput"
output_model: "ModelCanaryReducerOutput"

# === TOOL SPECIFICATION ===
tool_specification:
  tool_name: "tool_infrastructure_reducer"
  version: {major: 1, minor: 0, patch: 0}
  description: "Infrastructure adapter aggregation and service coordination for ONEX infrastructure tool group"
  main_tool_class: "NodeCanaryReducer"
  container_injection: "ONEXContainer"
  business_logic_pattern: "reducer"

# === MODEL SPECIFICATIONS ===
input_state:
  object_type: "object"
  required: ["adapter_results"]
  properties:
    adapter_results:
      property_type: "array"
      description: "Results from infrastructure adapters to aggregate"
    operation_type:
      property_type: "string"
      description: "Type of aggregation operation to perform"

output_state:
  object_type: "object"
  required: ["status", "aggregated_result"]
  properties:
    status:
      property_type: "string"
      description: "Operation status"
    aggregated_result:
      property_type: "object"
      description: "Aggregated results from infrastructure adapters"
    error_message:
      property_type: "string"
      description: "Error message if operation failed"

# === REDUCER CONFIGURATION WITH SUBCONTRACTS ===
# Single reduction operation for infrastructure aggregation
reduction_operations:
  - operation_type: "infrastructure_aggregate"
    reduction_function: "aggregate_adapter_results"
    associative: true
    commutative: false
    chunk_size: 10
    parallel_enabled: true
    intermediate_results_caching: true

# Streaming configuration
streaming:
  enabled: true
  buffer_size: 8192
  window_size: 100
  memory_threshold_mb: 256
  backpressure_enabled: true

# Conflict resolution for adapter results
conflict_resolution:
  strategy: "priority_based"
  detection_enabled: true
  timestamp_based_resolution: true
  conflict_logging_enabled: true

# Memory management
memory_management:
  max_memory_mb: 512
  gc_threshold: 0.8
  lazy_loading_enabled: true
  spill_to_disk_enabled: true

# Aggregation functions for infrastructure results
aggregation:
  aggregation_functions: ["status_merge", "health_aggregate", "result_combine"]
  null_handling_strategy: "include"
  duplicate_handling: "include"

# Event-driven architecture configuration
event_type:
  primary_events: ["infrastructure.adapter.aggregated", "infrastructure.status.updated"]
  event_categories: ["infrastructure", "aggregation", "status"]
  publish_events: true
  subscribe_events: true
  event_routing: "infrastructure_group"

# FSM State Machine Configuration (using subcontract reference)
state_transitions:
  $ref: "contracts/fsm_subcontract.yaml"



# === SERVICE CONFIGURATION ===
# Hosts the HTTP service for the infrastructure tool group with registry delegation
service_configuration:
  is_persistent_service: true
  default_port: 8089

  # Infrastructure HTTP endpoints
  http_endpoints:
    - path: "/health"
      method: "GET"
      description: "Infrastructure reducer health status"
    - path: "/infrastructure/adapters"
      method: "GET"
      description: "List all loaded infrastructure adapters"
    - path: "/infrastructure/status"
      method: "GET"
      description: "Get current infrastructure aggregation status"

# === ACTIONS ===
actions:
  - name: "aggregate_results"
    description: "Aggregate results from infrastructure adapters"
    inputs: ["adapter_results"]
    outputs: ["aggregated_result"]

  - name: "health_check"
    description: "Check health of infrastructure tool group"
    inputs: []
    outputs: ["status"]

  - name: "get_infrastructure_status"
    description: "Get current infrastructure aggregation and readiness status"
    inputs: []
    outputs: ["infrastructure_status", "adapter_health", "readiness_state"]

  - name: "list_loaded_adapters"
    description: "List all loaded infrastructure adapters"
    inputs: []
    outputs: ["loaded_adapters"]

# === DEPENDENCIES ===
dependencies:
  - name: "event_bus"
    type: "protocol"
    class_name: "ProtocolEventBus"
    module: "omnibase.protocol.protocol_event_bus"
  - name: "kafka"
    type: "protocol"
    class_name: "ProtocolKafka"
    module: "omnibase.protocol.protocol_kafka"
  - name: "file_system"
    type: "protocol"
    class_name: "ProtocolFileSystem"
    module: "omnibase.protocol.protocol_file_system"
  - name: "contract_loader"
    type: "protocol"
    class_name: "ProtocolContractLoader"
    module: "omnibase.protocol.protocol_contract_loader"
  - name: "consul_client"
    type: "protocol"
    class_name: "ProtocolConsulClient"
    module: "omnibase.protocol.protocol_consul_client"
  - name: "vault_client"
    type: "protocol"
    class_name: "ProtocolVaultClient"
    module: "omnibase.protocol.protocol_vault_client"

# === PERFORMANCE (Required for REDUCER nodes) ===
performance:
  single_operation_max_ms: 2000


infrastructure:
  kafka: {strategy: "direct", env_variable: "KAFKA_BOOTSTRAP_SERVERS", service_name: "staging-kafka"}
  event_bus: "http://localhost:11083"

# === INFRASTRUCTURE SERVICES CONFIGURATION ===
# Normalized ONEX service pattern: Service loads adapters, checks external infrastructure
infrastructure_services:
  # Adapters loaded as modules by this service (no separate ports)
  loaded_adapters:
    - name: "consul_adapter"
      onex_node_metadata: "omnibase.tools.infrastructure.tool_infrastructure_consul_adapter_effect.tool.manifest"
      version_strategy: "current_stable"

    - name: "vault_adapter"
      onex_node_metadata: "omnibase.tools.infrastructure.tool_infrastructure_vault_adapter_effect.tool.manifest"
      version_strategy: "current_stable"

    - name: "kafka_adapter"
      onex_node_metadata: "omnibase.tools.infrastructure.tool_infrastructure_kafka_adapter_effect.tool.manifest"
      version_strategy: "current_stable"

    # ONEX Messaging Architecture v0.2 Tools
    - name: "group_gateway"
      onex_node_metadata: "omnibase.tools.infrastructure.tool_infrastructure_group_gateway_effect.tool.manifest"
      version_strategy: "current_stable"

    - name: "message_aggregator"
      onex_node_metadata: "omnibase.tools.infrastructure.tool_infrastructure_message_aggregator_compute.tool.manifest"
      version_strategy: "current_stable"

    - name: "local_registry"
      onex_node_metadata: "omnibase.tools.infrastructure.tool_infrastructure_local_registry.tool.manifest"
      version_strategy: "current_stable"

  # External infrastructure services that need health monitoring
  external_services:
    - name: "consul_server"
      health_endpoint: "http://localhost:8500/v1/status/leader"
      ready_states: ["healthy", "leader"]
      failed_states: ["unhealthy", "connection_error"]

    - name: "vault_server"
      health_endpoint: "http://localhost:8200/v1/sys/health"
      ready_states: ["healthy", "unsealed"]
      failed_states: ["unhealthy", "sealed", "connection_error"]

    - name: "kafka_cluster"
      health_endpoint: "kafka://localhost:9092"
      ready_states: ["healthy", "available"]
      failed_states: ["unhealthy", "connection_error"]

  # Overall infrastructure status aggregation
  status_aggregation_rules:
    ready: "All external services healthy"
    degraded: "Some external services degraded"
    partial: "Some external services failed, some ready"
    unavailable: "All external services failed"


# === DEFINITIONS (Required by ModelContractContent) ===
definitions:
  models: {}
  schemas: {}
  responses: {}

# === SUBCONTRACTS ===
subcontracts:
  - path: "../../subcontracts/state_management_subcontract.yaml"
    integration_field: "state_management_configuration"
  - path: "../../subcontracts/service_resolution_subcontract.yaml"
    integration_field: "service_resolution_configuration"
  - path: "../../subcontracts/health_check_subcontract.yaml"
    integration_field: "health_check_configuration"
  - path: "../../subcontracts/introspection_subcontract.yaml"
    integration_field: "introspection_configuration"
  - path: "../../subcontracts/performance_monitoring_subcontract.yaml"
    integration_field: "performance_monitoring_configuration"
  - path: "../../subcontracts/request_response_subcontract.yaml"
    integration_field: "request_response_configuration"

# === VALIDATION ===
validation_rules:
  - field: "adapter_health_statuses"
    type: "dict"
    required: true
  - field: "operation_type"
    type: "string"
    required: true
    allowed_values: ["bootstrap", "health_check", "failover", "status_aggregation"]
