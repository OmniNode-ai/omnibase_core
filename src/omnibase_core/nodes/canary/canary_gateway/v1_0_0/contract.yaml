contract_version:
  major: 1
  minor: 0
  patch: 0
node_name: tool_infrastructure_group_gateway_effect
node_version:
  major: 1
  minor: 0
  patch: 0
contract_name: tool_infrastructure_group_gateway_effect_contract
description: Message routing and response aggregation with PostgreSQL persistence
name: tool_infrastructure_group_gateway_effect
version:
  major: 1
  minor: 0
  patch: 0
input_model: ModelGroupGatewayInput
output_model: ModelGroupGatewayOutput
node_type: EFFECT
caching:
  caching_enabled: true
  cache_strategy: postgresql_jsonb
  max_entries: 10000
  ttl_seconds: 300
  key_strategy:
    key_generation_method: composite_hash
    namespace: gw
    include_version: true
    hash_algorithm: sha256
    key_separator: ':'
    max_key_length: 250
  eviction_policy: lru
  persistence_enabled: true
  compression_enabled: true
  invalidation_policy:
    invalidation_strategy: ttl_based
    ttl_seconds: 300
    max_idle_seconds: 600
    invalidation_triggers:
      - data_change
      - configuration_update
    batch_invalidation: true
    lazy_expiration: true
routing_subcontract:
  routing_enabled: true
  routing_strategy: path_based
  routes:
    - route_name: message_route
      route_pattern: /gateway/route
      method: POST
      targets:
        - target_tools
      weight: 100
      priority: 1
      timeout_ms: 10000
  load_balancing:
    strategy: round_robin
    health_check_enabled: true
    health_check_path: /health
  circuit_breaker:
    enabled: true
    failure_threshold: 5
    timeout_ms: 60000
tool_specification:
  tool_name: tool_infrastructure_group_gateway_effect
  version:
    major: 1
    minor: 0
    patch: 0
  description: Message routing and response aggregation with PostgreSQL persistence
  main_tool_class: NodeCanaryGateway
  container_injection: ONEXContainer
  business_logic_pattern: effect
metadata:
  tier: 2
  specialization: effect
  category: infrastructure
  architectural_pattern: node_effect
  complexity: medium
service_configuration:
  is_persistent_service: false
  requires_external_dependencies: true
  external_services:
    - name: postgresql
      endpoint: postgresql://localhost:5432
      health_check: SELECT 1
      required: true
input_state:
  object_type: object
  required:
    - operation_type
    - target_tools
    - message_data
  optional:
    - correlation_id
    - timeout_ms
    - cache_strategy
output_state:
  object_type: object
  required:
    - status
    - aggregated_response
  optional:
    - error_message
    - cache_hit
    - routing_metrics
actions:
  - name: route_message
    description: Route message to target tools and aggregate responses
    inputs:
      - target_tools
      - message_data
      - correlation_id
    outputs:
      - aggregated_response
      - routing_metrics
  - name: health_check
    description: Check health of group gateway and dependencies
    inputs: []
    outputs:
      - status
      - dependency_health
  - name: clear_cache
    description: Clear response cache entries
    inputs:
      - cache_pattern
    outputs:
      - cleared_entries
  - name: get_routing_metrics
    description: Get current routing performance metrics
    inputs: []
    outputs:
      - routing_metrics
dependencies:
  - omnibase.protocol.protocol_event_bus
  - omnibase.protocol.protocol_postgresql
  - omnibase.protocol.protocol_file_system
event_type:
  primary_events:
    - message_routing
    - response_aggregation
    - group_coordination
  event_categories:
    - infrastructure
    - messaging
    - workflow_coordination
  publish_events: true
  subscribe_events: true
  event_routing: infrastructure
service_resolution:
  event_bus:
    protocol: ProtocolEventBus
    strategy: hybrid
    primary: kafka
    fallback: event_bus_client
    discovery: consul
  postgresql:
    protocol: ProtocolPostgreSQL
    strategy: direct_connection
    connection_pool_size: 10
infrastructure:
  postgresql:
    strategy: direct
    env_variable: POSTGRESQL_URL
    service_name: postgresql
  event_bus:
    strategy: hybrid
    primary: kafka
    fallback: http
    consul_discovery: true
contract_driven: true
strong_typing: true
zero_any_types: true
protocol_based: true
io_operations:
  - operation_type: route_message
    atomic: true
    backup_enabled: false
    permissions: null
    recursive: false
    buffer_size: 8192
    timeout_seconds: 10
    validation_enabled: true
  - operation_type: cache_lookup
    atomic: false
    backup_enabled: true
    permissions: null
    recursive: false
    buffer_size: 4096
    timeout_seconds: 5
    validation_enabled: true
  - operation_type: health_check
    atomic: false
    backup_enabled: false
    permissions: null
    recursive: false
    buffer_size: 2048
    timeout_seconds: 3
    validation_enabled: true
validation_rules:
  target_tools:
    type: list
    required: true
    description: List of target tools for message routing
  message_data:
    type: dict
    required: true
    description: Message payload data
  operation_type:
    type: string
    required: true
    allowed_values:
      - route
      - broadcast
      - aggregate
    description: Type of gateway operation to perform
  strict_typing_enabled: true
  input_validation_enabled: true
  output_validation_enabled: true
  performance_validation_enabled: true
subcontracts:
  - path: ../../subcontracts/service_resolution_subcontract.yaml
    integration_field: service_resolution_configuration
  - path: ../../subcontracts/health_check_subcontract.yaml
    integration_field: health_check_configuration
  - path: ../../subcontracts/introspection_subcontract.yaml
    integration_field: introspection_configuration
  - path: ../../subcontracts/performance_monitoring_subcontract.yaml
    integration_field: performance_monitoring_configuration
  - path: ../../subcontracts/request_response_subcontract.yaml
    integration_field: request_response_configuration
definitions:
  models: {}
  schemas: {}
  responses: {}
