"""
Model for agent attempt details in debug intelligence system.

This model represents detailed information about agent execution attempts
for learning and improvement purposes.
"""

from typing import Dict, List, Optional

from pydantic import BaseModel, Field


class ModelAgentAttemptDetails(BaseModel):
    """Model for agent attempt details."""

    code_generated: Optional[str] = Field(
        default=None, description="Code generated during the attempt"
    )
    commands_executed: List[str] = Field(
        default_factory=list, description="List of commands executed"
    )
    files_modified: List[str] = Field(
        default_factory=list, description="List of files that were modified"
    )
    tools_used: List[str] = Field(
        default_factory=list, description="List of tools used during execution"
    )
    execution_time_seconds: Optional[float] = Field(
        default=None, description="Time taken to execute the attempt"
    )
    memory_usage_mb: Optional[float] = Field(
        default=None, description="Memory usage during execution"
    )
    output_generated: Optional[str] = Field(
        default=None, description="Output generated by the attempt"
    )
    environment_info: Dict[str, str] = Field(
        default_factory=dict, description="Environment information during execution"
    )
    dependencies_used: List[str] = Field(
        default_factory=list, description="List of dependencies used"
    )
    approach_description: Optional[str] = Field(
        default=None, description="Description of the approach taken"
    )
