[mypy]
# Global configuration for ONEX Core type checking
python_version = 3.12
plugins = pydantic.mypy
namespace_packages = True
warn_return_any = False
warn_unused_configs = False
disallow_untyped_defs = False
disallow_incomplete_defs = False
check_untyped_defs = False
disallow_untyped_decorators = False
no_implicit_optional = False
warn_redundant_casts = False
warn_unused_ignores = False
warn_no_return = False
warn_unreachable = False
strict_equality = False
show_error_codes = True

# Allow some flexibility for ONEX patterns
allow_redefinition = True
implicit_reexport = True

# Third-party library settings
ignore_missing_imports = True
follow_imports = skip

# Pydantic v2 configuration
[pydantic-mypy]
init_forbid_extra = True
init_typed = True
warn_required_dynamic_aliases = True

# Allow pydantic imports
[mypy-pydantic]
ignore_missing_imports = False
follow_imports = normal

[mypy-pydantic.*]
ignore_missing_imports = False
follow_imports = normal

# ONEX-specific patterns
# Allow Any in legacy code during transition
disallow_any_explicit = False
disallow_any_generics = False

# Temporarily relaxed type checking for existing code during fallback removal
# TODO: Re-enable strict checking after comprehensive type annotation cleanup
[mypy-omnibase_core.core.*]
strict = False
warn_return_any = False
disallow_untyped_defs = False
ignore_errors = True

[mypy-omnibase_core.model.*]
strict = False
warn_return_any = False
disallow_untyped_defs = False
# Allow pydantic expressions to avoid BaseModel type issues
disallow_any_expr = False
# Temporarily ignore all model errors during transition
ignore_errors = True

[mypy-omnibase_core.enums.*]
strict = False
ignore_errors = True

[mypy-omnibase_core.exceptions.*]
strict = False
ignore_errors = True

[mypy-omnibase_core.decorators.*]
strict = False
ignore_errors = True

# Disable checking for all remaining problematic areas
[mypy-omnibase_core.utils.*]
ignore_errors = True

[mypy-omnibase_core.tools.*]
ignore_errors = True

[mypy-omnibase_core.protocol.*]
ignore_errors = True

# Disable checking for files with extensive existing issues
[mypy-omnibase_core.core.node_reducer]
ignore_errors = True

[mypy-omnibase_core.core.node_compute]
ignore_errors = True

[mypy-omnibase_core.core.node_effect]
ignore_errors = True

[mypy-omnibase_core.core.node_orchestrator]
ignore_errors = True

[mypy-omnibase_core.core.node_hub_base]
ignore_errors = True

[mypy-omnibase_core.core.enhanced_onex_container]
ignore_errors = True

[mypy-omnibase_core.core.core_logging]
ignore_errors = True

[mypy-omnibase_core.core.service_discovery_manager]
ignore_errors = True

[mypy-omnibase_core.core.node_base]
ignore_errors = True

[mypy-omnibase_core.core.monadic.*]
ignore_errors = True

[mypy-omnibase_core.core.tool_loader]
ignore_errors = True

[mypy-omnibase_core.core.services.*]
ignore_errors = True

[mypy-omnibase_core.core.enhanced_container]
ignore_errors = True

[mypy-omnibase_core.core.contracts.*]
ignore_errors = True

[mypy-omnibase_core.core.node_base_simplified]
ignore_errors = True

[mypy-omnibase_core.core.core_emit_log_event]
ignore_errors = True

# Disable checking for examples and tests with extensive type issues
[mypy-omnibase_core.examples.*]
ignore_errors = True

[mypy-omnibase_core.utils.directory_traverser]
ignore_errors = True

[mypy-omnibase_core.utils.utility_text_processor]
ignore_errors = True

[mypy-omnibase_core.utils.minimal_repro]
ignore_errors = True

[mypy-omnibase_core.utils.error_utils]
ignore_errors = True

[mypy-omnibase_core.tools.introspection]
ignore_errors = True

[mypy-omnibase_core.protocol.protocol_handler]
ignore_errors = True

[mypy-omnibase_core.model.semantic.*]
ignore_errors = True

[mypy-omnibase_core.model.ai.*]
ignore_errors = True

[mypy-omnibase_core.model.intelligence.*]
ignore_errors = True

[mypy-omnibase_core.mixin.*]
ignore_errors = True

# Relaxed checking for enums with compatibility issues
[mypy-omnibase_core.enums.enum_validation_severity]
strict = False
ignore_errors = True

[mypy-omnibase_core.enums.enum_priority_level]
strict = False
ignore_errors = True

# Additional problematic model files
[mypy-omnibase_core.model.configuration.*]
ignore_errors = True

[mypy-omnibase_core.model.registry.*]
ignore_errors = True

[mypy-omnibase_core.model.security.*]
ignore_errors = True

# Core model files with extensive type issues
[mypy-omnibase_core.model.core.model_schema_dict]
ignore_errors = True

[mypy-omnibase_core.model.core.model_schema]
ignore_errors = True

[mypy-omnibase_core.model.core.model_json_schema]
ignore_errors = True
