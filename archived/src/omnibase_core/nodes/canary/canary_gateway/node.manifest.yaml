schema_version: {major: 1, minor: 0, patch: 0}
name: "tool_group_gateway"
uuid: "b2c3d4e5-f6a7-8901-bcde-f23456789abc"
author: "ONEX Framework Team"
created_at: "2025-08-21T00:00:00Z"
last_modified_at: "2025-08-21T00:00:00Z"
description: "Group Gateway - Message routing and response aggregation for ONEX Messaging Architecture v0.2"
state_contract: "state_contract://group_gateway_schema.json"
lifecycle: "active"
hash: "bcdef23456789abcdef23456789abcdef23456789abcdef23456789abcdef234"
entrypoint:
  type: "python"
  target: "v1_0_0/node.py"
namespace: "omnibase.tools.infrastructure.tool_group_gateway"
meta_type: "tool"
runtime_language_hint: "python>=3.11"

# === INFRASTRUCTURE TOOL METADATA ===
capabilities:
  - "message_routing"
  - "response_aggregation"
  - "cache_management"
  - "postgresql_integration"

protocols_supported:
  - "ProtocolInfrastructureAdapter"
  - "ProtocolNodeEffect"

dependencies:
  - name: "postgresql_server"
    type: "external_service"
    target: "postgresql://localhost:5432"
    binding: "runtime_lookup"
    optional: false
    description: "PostgreSQL server for response caching and state management"

  - name: "onex_event_bus"
    type: "protocol_adherence"
    target: "ProtocolEventBus"
    binding: "injection"
    optional: false
    description: "ONEX event bus for message coordination"

# === VERSION MANAGEMENT (via x_extensions) ===
x_extensions:
  version_management:
    # Current version information
    current_stable: {major: 1, minor: 0, patch: 0}
    current_development: null

    # Version catalog with lifecycle states
    versions:
      v1_0_0:
        version: {major: 1, minor: 0, patch: 0}
        status: "active"
        release_date: "2025-08-21"
        breaking_changes: false
        recommended: true
        deprecation_date: null
        end_of_life: null

    # Discovery configuration for services loading this tool
    discovery:
      auto_load_strategy: "current_stable"
      fallback_versions: [{major: 1, minor: 0, patch: 0}]
      version_directory_pattern: "v{major}_{minor}_{patch}"
      implementation_file: "node.py"
      contract_file: "contract.yaml"
      main_class_name: "GroupGateway"

    # Service loading configuration
    service_integration:
      load_as_module: true
      requires_separate_port: false
      initialization_order: 3
      shutdown_timeout: 30
      health_check_via_service: true

# === EXECUTION METADATA ===
execution_mode: "async"
execution_constraints:
  max_memory_mb: 256
  max_cpu_percent: 30
  timeout_seconds: 60

# === TESTING METADATA ===
testing:
  required_ci_tiers:
    - "mock"
    - "integration"
  minimum_coverage_percentage: 85.0
  canonical_test_case_ids:
    - "test_message_routing"
    - "test_response_aggregation"
    - "test_cache_management"

# === SECURITY METADATA ===
data_handling_declaration:
  processes_sensitive_data: false
  data_classification: "internal"

security_context:
  requires_network_access: true
  external_endpoints:
    - "postgresql://localhost:5432"

# === LOGGING CONFIGURATION ===
logging_config:
  level: "info"
  format: "json"
  audit_events:
    - "gateway_initialized"
    - "message_routed"
    - "response_aggregated"
    - "cache_operation_completed"

tags:
  - "infrastructure"
  - "messaging"
  - "gateway"
  - "response-aggregation"
  - "postgresql"
