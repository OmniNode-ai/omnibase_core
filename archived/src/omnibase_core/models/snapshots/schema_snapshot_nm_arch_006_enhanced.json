{
  "metadata": {
    "timestamp": "2025-06-27T11:59:17.042566",
    "source_files": [
      "src/omnibase/model/model_registry_resolution_context.py",
      "src/omnibase/model/model_registry_resolution_result.py"
    ],
    "ticket": "nm_arch_006_model_registry_resolution_split",
    "total_models": 2,
    "purpose": "Post-enhancement validation baseline",
    "enhancement_features": [
      "enterprise_dependency_management",
      "performance_analytics",
      "business_intelligence",
      "monitoring_integration",
      "cache_optimization",
      "error_analysis",
      "factory_methods",
      "audit_trail_support",
      "tool_collection_compatibility"
    ]
  },
  "schemas": {
    "ModelRegistryResolutionContext": {
      "schema_hash": "cbe694ee43d5464b755c26e50b07ce310b69c257dff813391f215704bcd0a11f",
      "field_count": 14,
      "required_fields": 0,
      "schema": {
        "$defs": {
          "DependencyModeEnum": {
            "description": "Canonical enum for scenario dependency injection modes.\nControls whether scenarios use real external services or mocked test doubles.",
            "enum": [
              "real",
              "mock"
            ],
            "title": "DependencyModeEnum",
            "type": "string"
          },
          "ModelDatabaseConnectionConfig": {
            "description": "Enterprise-grade database connection configuration with comprehensive validation,\nbusiness logic, and environment override capabilities.\n\nFeatures:\n- Strong typing with comprehensive validation\n- Environment variable override support\n- Connection string generation and parsing\n- SSL/TLS configuration management\n- Connection pooling recommendations\n- Health check capability assessment\n- Performance tuning recommendations",
            "properties": {
              "host": {
                "description": "Database host",
                "maxLength": 255,
                "pattern": "^[a-zA-Z0-9\\-\\.]+$",
                "title": "Host",
                "type": "string"
              },
              "port": {
                "description": "Database port",
                "maximum": 65535,
                "minimum": 1,
                "title": "Port",
                "type": "integer"
              },
              "database": {
                "description": "Database name",
                "maxLength": 100,
                "pattern": "^[a-zA-Z0-9_\\-]+$",
                "title": "Database",
                "type": "string"
              },
              "username": {
                "description": "Database username",
                "maxLength": 100,
                "title": "Username",
                "type": "string"
              },
              "password": {
                "description": "Database password (secured)",
                "format": "password",
                "title": "Password",
                "type": "string",
                "writeOnly": true
              },
              "ssl_enabled": {
                "default": false,
                "description": "Whether to use SSL connection",
                "title": "Ssl Enabled",
                "type": "boolean"
              },
              "connection_timeout": {
                "default": 30,
                "description": "Connection timeout in seconds",
                "maximum": 300,
                "minimum": 1,
                "title": "Connection Timeout",
                "type": "integer"
              }
            },
            "required": [
              "host",
              "port",
              "database",
              "username",
              "password"
            ],
            "title": "ModelDatabaseConnectionConfig",
            "type": "object"
          },
          "ModelExternalServiceConfig": {
            "description": "Enterprise-grade external service configuration with comprehensive validation,\nbusiness logic, and service-specific configuration management.\n\nFeatures:\n- Strong typing with service-specific configuration models\n- Automatic configuration type detection and validation\n- Health check and retry configuration management\n- Security assessment and masking capabilities\n- Service discovery and connection management\n- Environment override support\n- Performance monitoring integration",
            "properties": {
              "service_name": {
                "description": "Name of the external service (e.g., 'kafka', 'database', 'api')",
                "maxLength": 100,
                "pattern": "^[a-zA-Z0-9_\\-]+$",
                "title": "Service Name",
                "type": "string"
              },
              "service_type": {
                "description": "Type of service (e.g., 'event_bus', 'database', 'rest_api')",
                "maxLength": 50,
                "pattern": "^[a-zA-Z0-9_\\-]+$",
                "title": "Service Type",
                "type": "string"
              },
              "connection_config": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/ModelKafkaConnectionConfig"
                  },
                  {
                    "$ref": "#/$defs/ModelDatabaseConnectionConfig"
                  },
                  {
                    "$ref": "#/$defs/ModelRestApiConnectionConfig"
                  },
                  {
                    "additionalProperties": true,
                    "type": "object"
                  }
                ],
                "description": "Service-specific connection configuration with validation",
                "title": "Connection Config"
              },
              "health_check_enabled": {
                "default": true,
                "description": "Whether to perform health checks before using this service",
                "title": "Health Check Enabled",
                "type": "boolean"
              },
              "health_check_timeout": {
                "default": 5,
                "description": "Timeout in seconds for health check operations",
                "maximum": 300,
                "minimum": 1,
                "title": "Health Check Timeout",
                "type": "integer"
              },
              "required": {
                "default": true,
                "description": "Whether this service is required for the scenario. If False, gracefully degrade if unavailable.",
                "title": "Required",
                "type": "boolean"
              },
              "retry_config": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/ModelRetryConfig"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "Retry configuration for service operations"
              }
            },
            "required": [
              "service_name",
              "service_type"
            ],
            "title": "ModelExternalServiceConfig",
            "type": "object"
          },
          "ModelKafkaConnectionConfig": {
            "description": "Enterprise-grade Kafka connection configuration with comprehensive validation,\nbusiness logic, and environment override capabilities.\n\nFeatures:\n- Strong typing with comprehensive validation\n- Environment variable override support\n- Connection string parsing and generation\n- Security protocol validation\n- SASL/SSL configuration management\n- Health check capability assessment\n- Performance tuning recommendations",
            "properties": {
              "bootstrap_servers": {
                "description": "Kafka bootstrap servers (comma-separated)",
                "maxLength": 500,
                "pattern": "^[a-zA-Z0-9\\-\\.:,\\s]+$",
                "title": "Bootstrap Servers",
                "type": "string"
              },
              "topic_prefix": {
                "anyOf": [
                  {
                    "maxLength": 50,
                    "pattern": "^[a-zA-Z0-9_\\-]*$",
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "Prefix for topic names",
                "title": "Topic Prefix"
              },
              "consumer_group": {
                "anyOf": [
                  {
                    "maxLength": 100,
                    "pattern": "^[a-zA-Z0-9_\\-]*$",
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "Consumer group ID",
                "title": "Consumer Group"
              },
              "timeout_ms": {
                "default": 5000,
                "description": "Connection timeout in milliseconds",
                "maximum": 300000,
                "minimum": 1000,
                "title": "Timeout Ms",
                "type": "integer"
              },
              "security_protocol": {
                "default": "PLAINTEXT",
                "description": "Security protocol (PLAINTEXT, SSL, SASL_PLAINTEXT, SASL_SSL)",
                "pattern": "^(PLAINTEXT|SSL|SASL_PLAINTEXT|SASL_SSL)$",
                "title": "Security Protocol",
                "type": "string"
              },
              "sasl_username": {
                "anyOf": [
                  {
                    "maxLength": 100,
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "SASL username for authentication",
                "title": "Sasl Username"
              },
              "sasl_password": {
                "anyOf": [
                  {
                    "format": "password",
                    "type": "string",
                    "writeOnly": true
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "SASL password for authentication (secured)",
                "title": "Sasl Password"
              },
              "ssl_keyfile": {
                "anyOf": [
                  {
                    "maxLength": 500,
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "Path to SSL key file",
                "title": "Ssl Keyfile"
              },
              "ssl_certfile": {
                "anyOf": [
                  {
                    "maxLength": 500,
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "Path to SSL certificate file",
                "title": "Ssl Certfile"
              },
              "ssl_cafile": {
                "anyOf": [
                  {
                    "maxLength": 500,
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "Path to SSL CA file",
                "title": "Ssl Cafile"
              }
            },
            "required": [
              "bootstrap_servers"
            ],
            "title": "ModelKafkaConnectionConfig",
            "type": "object"
          },
          "ModelRestApiConnectionConfig": {
            "description": "Enterprise-grade REST API connection configuration with comprehensive validation,\nbusiness logic, and environment override capabilities.\n\nFeatures:\n- Strong typing with comprehensive validation\n- Environment variable override support\n- URL validation and manipulation\n- Authentication method management\n- Retry and timeout configuration\n- Header management and validation\n- Health check endpoint support\n- Rate limiting awareness",
            "properties": {
              "base_url": {
                "description": "Base URL for the REST API",
                "maxLength": 500,
                "pattern": "^https?://[a-zA-Z0-9\\-\\.:]+(/.*)?$",
                "title": "Base Url",
                "type": "string"
              },
              "api_key": {
                "anyOf": [
                  {
                    "format": "password",
                    "type": "string",
                    "writeOnly": true
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "API key for authentication (secured)",
                "title": "Api Key"
              },
              "bearer_token": {
                "anyOf": [
                  {
                    "format": "password",
                    "type": "string",
                    "writeOnly": true
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "Bearer token for authentication (secured)",
                "title": "Bearer Token"
              },
              "timeout_seconds": {
                "default": 30,
                "description": "Request timeout in seconds",
                "maximum": 300,
                "minimum": 1,
                "title": "Timeout Seconds",
                "type": "integer"
              },
              "max_retries": {
                "default": 3,
                "description": "Maximum number of retries",
                "maximum": 10,
                "minimum": 0,
                "title": "Max Retries",
                "type": "integer"
              },
              "headers": {
                "anyOf": [
                  {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "type": "object"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "Additional HTTP headers",
                "title": "Headers"
              }
            },
            "required": [
              "base_url"
            ],
            "title": "ModelRestApiConnectionConfig",
            "type": "object"
          },
          "ModelRetryConfig": {
            "description": "Enterprise-grade retry configuration with comprehensive validation,\nbusiness logic, and intelligent retry strategy management.\n\nFeatures:\n- Strong typing with comprehensive validation\n- Exponential and linear backoff strategies\n- Jitter support for distributed systems\n- Circuit breaker integration patterns\n- Retry budget calculations\n- Performance impact assessment\n- Timeout escalation support",
            "properties": {
              "max_attempts": {
                "default": 3,
                "description": "Maximum number of retry attempts",
                "maximum": 10,
                "minimum": 1,
                "title": "Max Attempts",
                "type": "integer"
              },
              "backoff_seconds": {
                "default": 1.0,
                "description": "Base backoff time between retries",
                "maximum": 60.0,
                "minimum": 0.1,
                "title": "Backoff Seconds",
                "type": "number"
              },
              "exponential_backoff": {
                "default": true,
                "description": "Whether to use exponential backoff",
                "title": "Exponential Backoff",
                "type": "boolean"
              }
            },
            "title": "ModelRetryConfig",
            "type": "object"
          },
          "ModelToolCollection": {
            "description": "Standards-compliant collection of executable tools for ONEX registries.\n\nContains actual tool implementations that conform to ProtocolTool interface.\nUsed for registry-driven dependency injection and scenario-based testing.\n\nThis is the canonical type for registry tool collections, not a dict[str, Any].",
            "properties": {
              "tools": {
                "additionalProperties": true,
                "description": "Mapping of tool names to ProtocolTool implementations",
                "title": "Tools",
                "type": "object"
              }
            },
            "title": "ModelToolCollection",
            "type": "object"
          },
          "ResolutionStrategy": {
            "description": "Registry resolution strategy options.",
            "enum": [
              "fast",
              "comprehensive",
              "failsafe",
              "development",
              "production"
            ],
            "title": "ResolutionStrategy",
            "type": "string"
          }
        },
        "description": "Enterprise-grade registry resolution context with comprehensive dependency management,\nbusiness intelligence, and operational insights.\n\nFeatures:\n- Intelligent dependency mode resolution with business logic\n- External service configuration management and validation\n- Tool collection analysis and optimization\n- Performance tracking and resolution analytics\n- Security assessment and configuration validation\n- Business intelligence and operational insights\n- Factory methods for common scenarios",
        "properties": {
          "scenario_path": {
            "anyOf": [
              {
                "format": "path",
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Path to the scenario YAML file",
            "title": "Scenario Path"
          },
          "dependency_mode": {
            "$ref": "#/$defs/DependencyModeEnum",
            "default": "mock",
            "description": "Resolved dependency mode for tool injection"
          },
          "external_services": {
            "additionalProperties": {
              "$ref": "#/$defs/ModelExternalServiceConfig"
            },
            "description": "External service configurations when dependency_mode is REAL",
            "title": "External Services",
            "type": "object"
          },
          "registry_tools": {
            "$ref": "#/$defs/ModelToolCollection",
            "description": "Tool collection for registry injection"
          },
          "node_dir": {
            "anyOf": [
              {
                "format": "path",
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Node directory for context-aware tools",
            "title": "Node Dir"
          },
          "force_dependency_mode": {
            "anyOf": [
              {
                "$ref": "#/$defs/DependencyModeEnum"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "CLI override for dependency mode (for debugging/CI)"
          },
          "resolution_strategy": {
            "anyOf": [
              {
                "$ref": "#/$defs/ResolutionStrategy"
              },
              {
                "type": "null"
              }
            ],
            "default": "comprehensive",
            "description": "Strategy for registry resolution"
          },
          "timeout_seconds": {
            "anyOf": [
              {
                "maximum": 300,
                "minimum": 1,
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": 30,
            "description": "Timeout for resolution operations",
            "title": "Timeout Seconds"
          },
          "retry_count": {
            "anyOf": [
              {
                "maximum": 10,
                "minimum": 0,
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": 3,
            "description": "Number of retries for failed resolutions",
            "title": "Retry Count"
          },
          "cache_enabled": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "default": true,
            "description": "Whether to use caching for resolution results",
            "title": "Cache Enabled"
          },
          "validation_enabled": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "default": true,
            "description": "Whether to validate resolved configurations",
            "title": "Validation Enabled"
          },
          "metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "description": "Additional metadata and configuration",
            "title": "Metadata"
          },
          "resolution_id": {
            "anyOf": [
              {
                "maxLength": 100,
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Unique identifier for this resolution context",
            "title": "Resolution Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "ISO timestamp when context was created",
            "title": "Created At"
          }
        },
        "title": "ModelRegistryResolutionContext",
        "type": "object"
      }
    },
    "ModelRegistryResolutionResult": {
      "schema_hash": "8193a607011a11b0ca1410177810047a323fb87f6f76fe04d9181a2ef239c963",
      "field_count": 15,
      "required_fields": 2,
      "schema": {
        "$defs": {
          "DependencyModeEnum": {
            "description": "Canonical enum for scenario dependency injection modes.\nControls whether scenarios use real external services or mocked test doubles.",
            "enum": [
              "real",
              "mock"
            ],
            "title": "DependencyModeEnum",
            "type": "string"
          },
          "ModelDatabaseConnectionConfig": {
            "description": "Enterprise-grade database connection configuration with comprehensive validation,\nbusiness logic, and environment override capabilities.\n\nFeatures:\n- Strong typing with comprehensive validation\n- Environment variable override support\n- Connection string generation and parsing\n- SSL/TLS configuration management\n- Connection pooling recommendations\n- Health check capability assessment\n- Performance tuning recommendations",
            "properties": {
              "host": {
                "description": "Database host",
                "maxLength": 255,
                "pattern": "^[a-zA-Z0-9\\-\\.]+$",
                "title": "Host",
                "type": "string"
              },
              "port": {
                "description": "Database port",
                "maximum": 65535,
                "minimum": 1,
                "title": "Port",
                "type": "integer"
              },
              "database": {
                "description": "Database name",
                "maxLength": 100,
                "pattern": "^[a-zA-Z0-9_\\-]+$",
                "title": "Database",
                "type": "string"
              },
              "username": {
                "description": "Database username",
                "maxLength": 100,
                "title": "Username",
                "type": "string"
              },
              "password": {
                "description": "Database password (secured)",
                "format": "password",
                "title": "Password",
                "type": "string",
                "writeOnly": true
              },
              "ssl_enabled": {
                "default": false,
                "description": "Whether to use SSL connection",
                "title": "Ssl Enabled",
                "type": "boolean"
              },
              "connection_timeout": {
                "default": 30,
                "description": "Connection timeout in seconds",
                "maximum": 300,
                "minimum": 1,
                "title": "Connection Timeout",
                "type": "integer"
              }
            },
            "required": [
              "host",
              "port",
              "database",
              "username",
              "password"
            ],
            "title": "ModelDatabaseConnectionConfig",
            "type": "object"
          },
          "ModelExternalServiceConfig": {
            "description": "Enterprise-grade external service configuration with comprehensive validation,\nbusiness logic, and service-specific configuration management.\n\nFeatures:\n- Strong typing with service-specific configuration models\n- Automatic configuration type detection and validation\n- Health check and retry configuration management\n- Security assessment and masking capabilities\n- Service discovery and connection management\n- Environment override support\n- Performance monitoring integration",
            "properties": {
              "service_name": {
                "description": "Name of the external service (e.g., 'kafka', 'database', 'api')",
                "maxLength": 100,
                "pattern": "^[a-zA-Z0-9_\\-]+$",
                "title": "Service Name",
                "type": "string"
              },
              "service_type": {
                "description": "Type of service (e.g., 'event_bus', 'database', 'rest_api')",
                "maxLength": 50,
                "pattern": "^[a-zA-Z0-9_\\-]+$",
                "title": "Service Type",
                "type": "string"
              },
              "connection_config": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/ModelKafkaConnectionConfig"
                  },
                  {
                    "$ref": "#/$defs/ModelDatabaseConnectionConfig"
                  },
                  {
                    "$ref": "#/$defs/ModelRestApiConnectionConfig"
                  },
                  {
                    "additionalProperties": true,
                    "type": "object"
                  }
                ],
                "description": "Service-specific connection configuration with validation",
                "title": "Connection Config"
              },
              "health_check_enabled": {
                "default": true,
                "description": "Whether to perform health checks before using this service",
                "title": "Health Check Enabled",
                "type": "boolean"
              },
              "health_check_timeout": {
                "default": 5,
                "description": "Timeout in seconds for health check operations",
                "maximum": 300,
                "minimum": 1,
                "title": "Health Check Timeout",
                "type": "integer"
              },
              "required": {
                "default": true,
                "description": "Whether this service is required for the scenario. If False, gracefully degrade if unavailable.",
                "title": "Required",
                "type": "boolean"
              },
              "retry_config": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/ModelRetryConfig"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "Retry configuration for service operations"
              }
            },
            "required": [
              "service_name",
              "service_type"
            ],
            "title": "ModelExternalServiceConfig",
            "type": "object"
          },
          "ModelKafkaConnectionConfig": {
            "description": "Enterprise-grade Kafka connection configuration with comprehensive validation,\nbusiness logic, and environment override capabilities.\n\nFeatures:\n- Strong typing with comprehensive validation\n- Environment variable override support\n- Connection string parsing and generation\n- Security protocol validation\n- SASL/SSL configuration management\n- Health check capability assessment\n- Performance tuning recommendations",
            "properties": {
              "bootstrap_servers": {
                "description": "Kafka bootstrap servers (comma-separated)",
                "maxLength": 500,
                "pattern": "^[a-zA-Z0-9\\-\\.:,\\s]+$",
                "title": "Bootstrap Servers",
                "type": "string"
              },
              "topic_prefix": {
                "anyOf": [
                  {
                    "maxLength": 50,
                    "pattern": "^[a-zA-Z0-9_\\-]*$",
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "Prefix for topic names",
                "title": "Topic Prefix"
              },
              "consumer_group": {
                "anyOf": [
                  {
                    "maxLength": 100,
                    "pattern": "^[a-zA-Z0-9_\\-]*$",
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "Consumer group ID",
                "title": "Consumer Group"
              },
              "timeout_ms": {
                "default": 5000,
                "description": "Connection timeout in milliseconds",
                "maximum": 300000,
                "minimum": 1000,
                "title": "Timeout Ms",
                "type": "integer"
              },
              "security_protocol": {
                "default": "PLAINTEXT",
                "description": "Security protocol (PLAINTEXT, SSL, SASL_PLAINTEXT, SASL_SSL)",
                "pattern": "^(PLAINTEXT|SSL|SASL_PLAINTEXT|SASL_SSL)$",
                "title": "Security Protocol",
                "type": "string"
              },
              "sasl_username": {
                "anyOf": [
                  {
                    "maxLength": 100,
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "SASL username for authentication",
                "title": "Sasl Username"
              },
              "sasl_password": {
                "anyOf": [
                  {
                    "format": "password",
                    "type": "string",
                    "writeOnly": true
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "SASL password for authentication (secured)",
                "title": "Sasl Password"
              },
              "ssl_keyfile": {
                "anyOf": [
                  {
                    "maxLength": 500,
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "Path to SSL key file",
                "title": "Ssl Keyfile"
              },
              "ssl_certfile": {
                "anyOf": [
                  {
                    "maxLength": 500,
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "Path to SSL certificate file",
                "title": "Ssl Certfile"
              },
              "ssl_cafile": {
                "anyOf": [
                  {
                    "maxLength": 500,
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "Path to SSL CA file",
                "title": "Ssl Cafile"
              }
            },
            "required": [
              "bootstrap_servers"
            ],
            "title": "ModelKafkaConnectionConfig",
            "type": "object"
          },
          "ModelRegistryResolutionContext": {
            "description": "Enterprise-grade registry resolution context with comprehensive dependency management,\nbusiness intelligence, and operational insights.\n\nFeatures:\n- Intelligent dependency mode resolution with business logic\n- External service configuration management and validation\n- Tool collection analysis and optimization\n- Performance tracking and resolution analytics\n- Security assessment and configuration validation\n- Business intelligence and operational insights\n- Factory methods for common scenarios",
            "properties": {
              "scenario_path": {
                "anyOf": [
                  {
                    "format": "path",
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "Path to the scenario YAML file",
                "title": "Scenario Path"
              },
              "dependency_mode": {
                "$ref": "#/$defs/DependencyModeEnum",
                "default": "mock",
                "description": "Resolved dependency mode for tool injection"
              },
              "external_services": {
                "additionalProperties": {
                  "$ref": "#/$defs/ModelExternalServiceConfig"
                },
                "description": "External service configurations when dependency_mode is REAL",
                "title": "External Services",
                "type": "object"
              },
              "registry_tools": {
                "$ref": "#/$defs/ModelToolCollection",
                "description": "Tool collection for registry injection"
              },
              "node_dir": {
                "anyOf": [
                  {
                    "format": "path",
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "Node directory for context-aware tools",
                "title": "Node Dir"
              },
              "force_dependency_mode": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/DependencyModeEnum"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "CLI override for dependency mode (for debugging/CI)"
              },
              "resolution_strategy": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/ResolutionStrategy"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": "comprehensive",
                "description": "Strategy for registry resolution"
              },
              "timeout_seconds": {
                "anyOf": [
                  {
                    "maximum": 300,
                    "minimum": 1,
                    "type": "integer"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": 30,
                "description": "Timeout for resolution operations",
                "title": "Timeout Seconds"
              },
              "retry_count": {
                "anyOf": [
                  {
                    "maximum": 10,
                    "minimum": 0,
                    "type": "integer"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": 3,
                "description": "Number of retries for failed resolutions",
                "title": "Retry Count"
              },
              "cache_enabled": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": true,
                "description": "Whether to use caching for resolution results",
                "title": "Cache Enabled"
              },
              "validation_enabled": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": true,
                "description": "Whether to validate resolved configurations",
                "title": "Validation Enabled"
              },
              "metadata": {
                "anyOf": [
                  {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  {
                    "type": "null"
                  }
                ],
                "description": "Additional metadata and configuration",
                "title": "Metadata"
              },
              "resolution_id": {
                "anyOf": [
                  {
                    "maxLength": 100,
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "Unique identifier for this resolution context",
                "title": "Resolution Id"
              },
              "created_at": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "ISO timestamp when context was created",
                "title": "Created At"
              }
            },
            "title": "ModelRegistryResolutionContext",
            "type": "object"
          },
          "ModelRestApiConnectionConfig": {
            "description": "Enterprise-grade REST API connection configuration with comprehensive validation,\nbusiness logic, and environment override capabilities.\n\nFeatures:\n- Strong typing with comprehensive validation\n- Environment variable override support\n- URL validation and manipulation\n- Authentication method management\n- Retry and timeout configuration\n- Header management and validation\n- Health check endpoint support\n- Rate limiting awareness",
            "properties": {
              "base_url": {
                "description": "Base URL for the REST API",
                "maxLength": 500,
                "pattern": "^https?://[a-zA-Z0-9\\-\\.:]+(/.*)?$",
                "title": "Base Url",
                "type": "string"
              },
              "api_key": {
                "anyOf": [
                  {
                    "format": "password",
                    "type": "string",
                    "writeOnly": true
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "API key for authentication (secured)",
                "title": "Api Key"
              },
              "bearer_token": {
                "anyOf": [
                  {
                    "format": "password",
                    "type": "string",
                    "writeOnly": true
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "Bearer token for authentication (secured)",
                "title": "Bearer Token"
              },
              "timeout_seconds": {
                "default": 30,
                "description": "Request timeout in seconds",
                "maximum": 300,
                "minimum": 1,
                "title": "Timeout Seconds",
                "type": "integer"
              },
              "max_retries": {
                "default": 3,
                "description": "Maximum number of retries",
                "maximum": 10,
                "minimum": 0,
                "title": "Max Retries",
                "type": "integer"
              },
              "headers": {
                "anyOf": [
                  {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "type": "object"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "Additional HTTP headers",
                "title": "Headers"
              }
            },
            "required": [
              "base_url"
            ],
            "title": "ModelRestApiConnectionConfig",
            "type": "object"
          },
          "ModelRetryConfig": {
            "description": "Enterprise-grade retry configuration with comprehensive validation,\nbusiness logic, and intelligent retry strategy management.\n\nFeatures:\n- Strong typing with comprehensive validation\n- Exponential and linear backoff strategies\n- Jitter support for distributed systems\n- Circuit breaker integration patterns\n- Retry budget calculations\n- Performance impact assessment\n- Timeout escalation support",
            "properties": {
              "max_attempts": {
                "default": 3,
                "description": "Maximum number of retry attempts",
                "maximum": 10,
                "minimum": 1,
                "title": "Max Attempts",
                "type": "integer"
              },
              "backoff_seconds": {
                "default": 1.0,
                "description": "Base backoff time between retries",
                "maximum": 60.0,
                "minimum": 0.1,
                "title": "Backoff Seconds",
                "type": "number"
              },
              "exponential_backoff": {
                "default": true,
                "description": "Whether to use exponential backoff",
                "title": "Exponential Backoff",
                "type": "boolean"
              }
            },
            "title": "ModelRetryConfig",
            "type": "object"
          },
          "ModelToolCollection": {
            "description": "Standards-compliant collection of executable tools for ONEX registries.\n\nContains actual tool implementations that conform to ProtocolTool interface.\nUsed for registry-driven dependency injection and scenario-based testing.\n\nThis is the canonical type for registry tool collections, not a dict[str, Any].",
            "properties": {
              "tools": {
                "additionalProperties": true,
                "description": "Mapping of tool names to ProtocolTool implementations",
                "title": "Tools",
                "type": "object"
              }
            },
            "title": "ModelToolCollection",
            "type": "object"
          },
          "ResolutionStatus": {
            "description": "Registry resolution status values.",
            "enum": [
              "success",
              "partial_success",
              "failure",
              "timeout",
              "cached",
              "retry_required"
            ],
            "title": "ResolutionStatus",
            "type": "string"
          },
          "ResolutionStrategy": {
            "description": "Registry resolution strategy options.",
            "enum": [
              "fast",
              "comprehensive",
              "failsafe",
              "development",
              "production"
            ],
            "title": "ResolutionStrategy",
            "type": "string"
          }
        },
        "description": "Enterprise-grade registry resolution result with comprehensive tracking,\nanalytics, and operational insights.\n\nFeatures:\n- Comprehensive resolution tracking and analytics\n- Performance monitoring and optimization insights\n- Error analysis and recovery recommendations\n- Business intelligence and operational metrics\n- Audit trail and compliance reporting\n- Cache management and optimization\n- Factory methods for common scenarios",
        "properties": {
          "registry": {
            "description": "The resolved registry instance",
            "title": "Registry"
          },
          "resolution_context": {
            "$ref": "#/$defs/ModelRegistryResolutionContext",
            "description": "Context used for resolution"
          },
          "resolution_log": {
            "description": "Log of resolution steps for audit and debugging",
            "items": {
              "type": "string"
            },
            "title": "Resolution Log",
            "type": "array"
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/$defs/ResolutionStatus"
              },
              {
                "type": "null"
              }
            ],
            "default": "success",
            "description": "Overall resolution status"
          },
          "start_time": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "ISO timestamp when resolution started",
            "title": "Start Time"
          },
          "end_time": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "ISO timestamp when resolution completed",
            "title": "End Time"
          },
          "duration_ms": {
            "anyOf": [
              {
                "minimum": 0,
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Resolution duration in milliseconds",
            "title": "Duration Ms"
          },
          "cached_result": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "default": false,
            "description": "Whether this result was served from cache",
            "title": "Cached Result"
          },
          "retry_count": {
            "anyOf": [
              {
                "minimum": 0,
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": 0,
            "description": "Number of retries performed",
            "title": "Retry Count"
          },
          "error_message": {
            "anyOf": [
              {
                "maxLength": 1000,
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Error message if resolution failed",
            "title": "Error Message"
          },
          "error_code": {
            "anyOf": [
              {
                "maxLength": 50,
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Specific error code for programmatic handling",
            "title": "Error Code"
          },
          "warnings": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "description": "Non-fatal warnings during resolution",
            "title": "Warnings"
          },
          "performance_metrics": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "description": "Detailed performance and resource metrics",
            "title": "Performance Metrics"
          },
          "registry_metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "description": "Metadata about the resolved registry",
            "title": "Registry Metadata"
          },
          "cache_metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "description": "Cache-related metadata and statistics",
            "title": "Cache Metadata"
          }
        },
        "required": [
          "registry",
          "resolution_context"
        ],
        "title": "ModelRegistryResolutionResult",
        "type": "object"
      }
    }
  }
}
