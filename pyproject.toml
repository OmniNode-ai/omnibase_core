[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "omnibase_core"
version = "0.1.0"
description = "ONEX Core Framework - Base classes and essential implementations"
authors = ["OmniNode Team <team@omninode.ai>"]
license = "MIT"
readme = "README.md"
packages = [{include = "omnibase_core", from = "src"}]
include = [
    "scripts/validation/*.py",
    "scripts/validation/*.json",
    "scripts/validation/*.md"
]

[tool.poetry.scripts]
omni-agent = "omnibase_core.cli.commands:cli"

[tool.poetry.extras]
cli = ["psutil"]
monitoring = ["prometheus-client", "sentry-sdk"]
kubernetes = ["kubernetes"]
full = ["psutil", "prometheus-client", "sentry-sdk", "kubernetes"]

[tool.poetry.dependencies]
python = "^3.12"
# ONEX SPI dependency - HTTPS format for improved CI/CD compatibility
# Authentication via git config with Personal Access Token
omnibase_spi = {git = "https://github.com/OmniNode-ai/omnibase_spi.git", branch = "main"}
pydantic = "^2.11.7"
llama-index = "^0.12.0"
fastapi = "^0.115.0"
uvicorn = "^0.32.0"
pyyaml = "^6.0.2"
asyncpg = "^0.29.0"
python-consul = "^1.1.0"
psycopg2-binary = "^2.9.10"
redis = "^6.4.0"
dependency-injector = "^4.48.1"

# CLI Dependencies
click = "^8.1.0"
rich = "^13.7.0"
aiohttp = "^3.9.0"

# Optional CLI Dependencies
psutil = {version = "^5.9.0", optional = true}
kubernetes = {version = "^29.0.0", optional = true}
prometheus-client = {version = "^0.19.0", optional = true}
sentry-sdk = {version = "^1.40.0", optional = true}

[tool.poetry.group.dev.dependencies]
pytest = "^8.4.0"
pytest-asyncio = "^0.25.0"
mypy = "^1.13.0"
black = "^24.10.0"
isort = "^5.13.0"
ruff = "^0.8.0"
types-pyyaml = "^6.0.12.20250822"
pre-commit = "^4.3.0"
types-requests = "^2.32.4.20250913"
memory-profiler = "^0.61.0"
pyyaml = "^6.0.3"
pytest-cov = "^7.0.0"

[tool.ruff]
target-version = "py312"
line-length = 88

[tool.ruff.lint]
select = ["E", "F", "W", "C90", "I", "N", "UP", "YTT", "S", "BLE", "FBT", "B", "A", "COM", "C4", "DTZ", "T10", "EM", "EXE", "ISC", "ICN", "G", "INP", "PIE", "T20", "PT", "Q", "RSE", "RET", "SLF", "SIM", "TID", "TCH", "ARG", "PTH", "ERA", "PD", "PGH", "PL", "TRY", "NPY", "RUF"]
ignore = ["S101"]  # Allow assert statements in tests

[tool.mypy]
plugins = ["pydantic.mypy"]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
mypy_path = "src"
namespace_packages = true
explicit_package_bases = true

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = false
warn_required_dynamic_aliases = true
warn_untyped_fields = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"
