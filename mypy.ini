[mypy]
# Global configuration for ONEX Core type checking
python_version = 3.11
plugins = pydantic.mypy
namespace_packages = True
warn_return_any = True
warn_unused_configs = True
disallow_untyped_defs = False
disallow_incomplete_defs = False
check_untyped_defs = True
disallow_untyped_decorators = False
no_implicit_optional = True
warn_redundant_casts = True
warn_unused_ignores = True
warn_no_return = True
warn_unreachable = True
strict_equality = True
show_error_codes = True

# Allow some flexibility for ONEX patterns
allow_redefinition = True
implicit_reexport = True

# Third-party library settings
ignore_missing_imports = True
follow_imports = skip

# Pydantic v2 configuration
[pydantic-mypy]
init_forbid_extra = True
init_typed = True
warn_required_dynamic_aliases = True

# Allow pydantic imports
[mypy-pydantic]
ignore_missing_imports = False
follow_imports = normal

[mypy-pydantic.*]
ignore_missing_imports = False
follow_imports = normal

# ONEX-specific patterns
# Allow Any in legacy code during transition
disallow_any_explicit = False
disallow_any_generics = False

# Strict checking for modern ONEX Core components
[mypy-omnibase_core.core.*]
strict = True

[mypy-omnibase_core.model.*]
strict = True
# Allow pydantic expressions to avoid BaseModel type issues
disallow_any_expr = False

[mypy-omnibase_core.enums.*]
strict = True

[mypy-omnibase_core.exceptions.*]
strict = True

[mypy-omnibase_core.decorators.*]
strict = True
